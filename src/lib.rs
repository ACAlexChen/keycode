use strum_macros::{Display, EnumString};
use serde::{Deserialize, Serialize};
use thiserror::Error;
use std::error::Error as TraitError;

use rdev::Key as RdevKey;
use rdev::Button as RdevButton;
use enigo::Key as EnigoKey;


#[derive(Error, Debug)]
pub enum Error {
  #[error("A key do not exist")]
  NoKeycode
}

trait OptionToResult<T> {
  fn to_result<E: TraitError>(self, err: E) -> Result<T, E>;
}

impl<T> OptionToResult<T> for Option<T> {
  fn to_result<E: TraitError>(self, err: E) -> Result<T, E> {
    if let Some(value) = self {
      Ok(value)
    } else {
      Err(err)
    }
  }
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, Deserialize, Serialize, Display, EnumString)]
#[repr(u8)]
pub enum Keyboard {
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
  Y,
  Z,
  Backspace,
  CapsLock,
  Enter,
  Esc,
  AltLeft,
  AltRight,
  CtrlLeft,
  CtrlRight,
  ShiftLeft,
  ShiftRight,
  Space,
  Tab,
  F1,
  F2,
  F3,
  F4,
  F5,
  F6,
  F7,
  F8,
  F9,
  F10,
  F11,
  F12,
  Digit1,
  Digit2,
  Digit3,
  Digit4,
  Digit5,
  Digit6,
  Digit7,
  Digit8,
  Digit9,
  Digit0,
  Backquote,
  Minus,
  Equal,
  BracketLeft,
  BracketRight,
  Backslash,
  Semicolon,
  Quote,
  Comma,
  Period,
  Slash,
  MetaLeft,
  Delete,
  ContextMenu,
  Num1,
  Num2,
  Num3,
  Num4,
  Num5,
  Num6,
  Num7,
  Num8,
  Num9,
  Num0,
  NumLock,
  NumAdd,
  NumSubtract,
  NumDivide,
  NumMultiply,
  NumDecimal,
  ArrowUp,
  ArrowDown,
  ArrowLeft,
  ArrowRight,
  Home,
  End,
  Insert,
  PageUp,
  PageDown,
  Pause,
  ScrollLock,
}

// Keyboard::A => todo!(),
// Keyboard::B => todo!(),
// Keyboard::C => todo!(),
// Keyboard::D => todo!(),
// Keyboard::E => todo!(),
// Keyboard::F => todo!(),
// Keyboard::G => todo!(),
// Keyboard::H => todo!(),
// Keyboard::I => todo!(),
// Keyboard::J => todo!(),
// Keyboard::K => todo!(),
// Keyboard::L => todo!(),
// Keyboard::M => todo!(),
// Keyboard::N => todo!(),
// Keyboard::O => todo!(),
// Keyboard::P => todo!(),
// Keyboard::Q => todo!(),
// Keyboard::R => todo!(),
// Keyboard::S => todo!(),
// Keyboard::T => todo!(),
// Keyboard::U => todo!(),
// Keyboard::V => todo!(),
// Keyboard::W => todo!(),
// Keyboard::X => todo!(),
// Keyboard::Y => todo!(),
// Keyboard::Z => todo!(),
// Keyboard::Backspace => todo!(),
// Keyboard::CapsLock => todo!(),
// Keyboard::Enter => todo!(),
// Keyboard::Esc => todo!(),
// Keyboard::AltLeft => todo!(),
// Keyboard::AltRight => todo!(),
// Keyboard::CtrlLeft => todo!(),
// Keyboard::CtrlRight => todo!(),
// Keyboard::ShiftLeft => todo!(),
// Keyboard::ShiftRight => todo!(),
// Keyboard::Space => todo!(),
// Keyboard::Tab => todo!(),
// Keyboard::F1 => todo!(),
// Keyboard::F2 => todo!(),
// Keyboard::F3 => todo!(),
// Keyboard::F4 => todo!(),
// Keyboard::F5 => todo!(),
// Keyboard::F6 => todo!(),
// Keyboard::F7 => todo!(),
// Keyboard::F8 => todo!(),
// Keyboard::F9 => todo!(),
// Keyboard::F10 => todo!(),
// Keyboard::F11 => todo!(),
// Keyboard::F12 => todo!(),
// Keyboard::Digit1 => todo!(),
// Keyboard::Digit2 => todo!(),
// Keyboard::Digit3 => todo!(),
// Keyboard::Digit4 => todo!(),
// Keyboard::Digit5 => todo!(),
// Keyboard::Digit6 => todo!(),
// Keyboard::Digit7 => todo!(),
// Keyboard::Digit8 => todo!(),
// Keyboard::Digit9 => todo!(),
// Keyboard::Digit0 => todo!(),
// Keyboard::Backquote => todo!(),
// Keyboard::Minus => todo!(),
// Keyboard::Equal => todo!(),
// Keyboard::BracketLeft => todo!(),
// Keyboard::BracketRight => todo!(),
// Keyboard::Backslash => todo!(),
// Keyboard::Semicolon => todo!(),
// Keyboard::Quote => todo!(),
// Keyboard::Comma => todo!(),
// Keyboard::Period => todo!(),
// Keyboard::Slash => todo!(),
// Keyboard::MetaLeft => todo!(),
// Keyboard::Delete => todo!(),
// Keyboard::ContextMenu => todo!(),
// Keyboard::Num1 => todo!(),
// Keyboard::Num2 => todo!(),
// Keyboard::Num3 => todo!(),
// Keyboard::Num4 => todo!(),
// Keyboard::Num5 => todo!(),
// Keyboard::Num6 => todo!(),
// Keyboard::Num7 => todo!(),
// Keyboard::Num8 => todo!(),
// Keyboard::Num9 => todo!(),
// Keyboard::Num0 => todo!(),
// Keyboard::NumLock => todo!(),
// Keyboard::NumAdd => todo!(),
// Keyboard::NumSubtract => todo!(),
// Keyboard::NumDivide => todo!(),
// Keyboard::NumMultiply => todo!(),
// Keyboard::NumDecimal => todo!(),
// Keyboard::ArrowUp => todo!(),
// Keyboard::ArrowDown => todo!(),
// Keyboard::ArrowLeft => todo!(),
// Keyboard::ArrowRight => todo!(),
// Keyboard::Home => todo!(),
// Keyboard::End => todo!(),
// Keyboard::Insert => todo!(),
// Keyboard::PageUp => todo!(),
// Keyboard::PageDown => todo!(),
// Keyboard::Pause => todo!(),
// Keyboard::ScrollLock => todo!(),

impl Keyboard {
  pub fn to_ascii(&self) -> u8 {
    match self {
      Keyboard::A => 65,
      Keyboard::B => 66,
      Keyboard::C => 67,
      Keyboard::D => 68,
      Keyboard::E => 69,
      Keyboard::F => 70,
      Keyboard::G => 71,
      Keyboard::H => 72,
      Keyboard::I => 73,
      Keyboard::J => 74,
      Keyboard::K => 75,
      Keyboard::L => 76,
      Keyboard::M => 77,
      Keyboard::N => 78,
      Keyboard::O => 79,
      Keyboard::P => 80,
      Keyboard::Q => 81,
      Keyboard::R => 82,
      Keyboard::S => 83,
      Keyboard::T => 84,
      Keyboard::U => 85,
      Keyboard::V => 86,
      Keyboard::W => 87,
      Keyboard::X => 88,
      Keyboard::Y => 89,
      Keyboard::Z => 90,
      Keyboard::Backspace => 8,
      Keyboard::CapsLock => 20,
      Keyboard::Enter => 13,
      Keyboard::Esc => 27,
      Keyboard::AltLeft => 18,
      Keyboard::AltRight => 18,
      Keyboard::CtrlLeft => 17,
      Keyboard::CtrlRight => 17,
      Keyboard::ShiftLeft => 16,
      Keyboard::ShiftRight => 16,
      Keyboard::Space => 32,
      Keyboard::Tab => 9,
      Keyboard::F1 => 112,
      Keyboard::F2 => 113,
      Keyboard::F3 => 114,
      Keyboard::F4 => 115,
      Keyboard::F5 => 116,
      Keyboard::F6 => 117,
      Keyboard::F7 => 118,
      Keyboard::F8 => 119,
      Keyboard::F9 => 120,
      Keyboard::F10 => 121,
      Keyboard::F11 => 122,
      Keyboard::F12 => 123,
      Keyboard::Digit1 => 49,
      Keyboard::Digit2 => 50,
      Keyboard::Digit3 => 51,
      Keyboard::Digit4 => 52,
      Keyboard::Digit5 => 53,
      Keyboard::Digit6 => 54,
      Keyboard::Digit7 => 55,
      Keyboard::Digit8 => 56,
      Keyboard::Digit9 => 57,
      Keyboard::Digit0 => 48,
      Keyboard::Backquote => 8,
      Keyboard::Minus => 189,
      Keyboard::Equal => 187,
      Keyboard::BracketLeft => 219,
      Keyboard::BracketRight => 221,
      Keyboard::Backslash => 220,
      Keyboard::Semicolon => 186,
      Keyboard::Quote => 222,
      Keyboard::Comma => 188,
      Keyboard::Period => 190,
      Keyboard::Slash => 191,
      Keyboard::MetaLeft => 91,
      Keyboard::Delete => 46,
      Keyboard::ContextMenu => 93,
      Keyboard::Num1 => 97,
      Keyboard::Num2 => 98,
      Keyboard::Num3 => 99,
      Keyboard::Num4 => 100,
      Keyboard::Num5 => 101,
      Keyboard::Num6 => 102,
      Keyboard::Num7 => 103,
      Keyboard::Num8 => 104,
      Keyboard::Num9 => 105,
      Keyboard::Num0 => 96,
      Keyboard::NumLock => 144,
      Keyboard::NumAdd => 107,
      Keyboard::NumSubtract => 109,
      Keyboard::NumDivide => 111,
      Keyboard::NumMultiply => 106,
      Keyboard::NumDecimal => 46,
      Keyboard::ArrowUp => 38,
      Keyboard::ArrowDown => 40,
      Keyboard::ArrowLeft => 37,
      Keyboard::ArrowRight => 39,
      Keyboard::Home => 36,
      Keyboard::End => 35,
      Keyboard::Insert => 45,
      Keyboard::PageUp => 33,
      Keyboard::PageDown => 34,
      Keyboard::Pause => 19,
      Keyboard::ScrollLock => 145,
    }
  }

  pub fn to_rdev_key(&self) -> Option<RdevKey> {
    match self {
      Keyboard::A => Some(RdevKey::KeyA),
      Keyboard::B => Some(RdevKey::KeyB),
      Keyboard::C => Some(RdevKey::KeyC),
      Keyboard::D => Some(RdevKey::KeyD),
      Keyboard::E => Some(RdevKey::KeyE),
      Keyboard::F => Some(RdevKey::KeyF),
      Keyboard::G => Some(RdevKey::KeyG),
      Keyboard::H => Some(RdevKey::KeyH),
      Keyboard::I => Some(RdevKey::KeyI),
      Keyboard::J => Some(RdevKey::KeyJ),
      Keyboard::K => Some(RdevKey::KeyK),
      Keyboard::L => Some(RdevKey::KeyL),
      Keyboard::M => Some(RdevKey::KeyM),
      Keyboard::N => Some(RdevKey::KeyN),
      Keyboard::O => Some(RdevKey::KeyO),
      Keyboard::P => Some(RdevKey::KeyP),
      Keyboard::Q => Some(RdevKey::KeyQ),
      Keyboard::R => Some(RdevKey::KeyR),
      Keyboard::S => Some(RdevKey::KeyS),
      Keyboard::T => Some(RdevKey::KeyT),
      Keyboard::U => Some(RdevKey::KeyU),
      Keyboard::V => Some(RdevKey::KeyV),
      Keyboard::W => Some(RdevKey::KeyW),
      Keyboard::X => Some(RdevKey::KeyX),
      Keyboard::Y => Some(RdevKey::KeyY),
      Keyboard::Z => Some(RdevKey::KeyZ),
      Keyboard::Backspace => Some(RdevKey::Backspace),
      Keyboard::CapsLock => Some(RdevKey::CapsLock),
      Keyboard::Enter => Some(RdevKey::Return),
      Keyboard::Esc => Some(RdevKey::Escape),
      Keyboard::AltLeft => Some(RdevKey::Alt),
      Keyboard::AltRight => Some(RdevKey::Alt),
      Keyboard::CtrlLeft => Some(RdevKey::ControlLeft),
      Keyboard::CtrlRight => Some(RdevKey::ControlRight),
      Keyboard::ShiftLeft => Some(RdevKey::ShiftLeft),
      Keyboard::ShiftRight => Some(RdevKey::ShiftRight),
      Keyboard::Space => Some(RdevKey::Space),
      Keyboard::Tab => Some(RdevKey::Tab),
      Keyboard::F1 => Some(RdevKey::F1),
      Keyboard::F2 => Some(RdevKey::F2),
      Keyboard::F3 => Some(RdevKey::F3),
      Keyboard::F4 => Some(RdevKey::F4),
      Keyboard::F5 => Some(RdevKey::F5),
      Keyboard::F6 => Some(RdevKey::F6),
      Keyboard::F7 => Some(RdevKey::F7),
      Keyboard::F8 => Some(RdevKey::F8),
      Keyboard::F9 => Some(RdevKey::F9),
      Keyboard::F10 => Some(RdevKey::F10),
      Keyboard::F11 => Some(RdevKey::F11),
      Keyboard::F12 => Some(RdevKey::F12),
      Keyboard::Digit1 => Some(RdevKey::Num1),
      Keyboard::Digit2 => Some(RdevKey::Num2),
      Keyboard::Digit3 => Some(RdevKey::Num3),
      Keyboard::Digit4 => Some(RdevKey::Num4),
      Keyboard::Digit5 => Some(RdevKey::Num5),
      Keyboard::Digit6 => Some(RdevKey::Num6),
      Keyboard::Digit7 => Some(RdevKey::Num7),
      Keyboard::Digit8 => Some(RdevKey::Num8),
      Keyboard::Digit9 => Some(RdevKey::Num9),
      Keyboard::Digit0 => Some(RdevKey::Num0),
      Keyboard::Backquote => Some(RdevKey::BackQuote),
      Keyboard::Minus => Some(RdevKey::Minus),
      Keyboard::Equal => Some(RdevKey::Equal),
      Keyboard::BracketLeft => Some(RdevKey::LeftBracket),
      Keyboard::BracketRight => Some(RdevKey::RightBracket),
      Keyboard::Backslash => Some(RdevKey::BackSlash),
      Keyboard::Semicolon => Some(RdevKey::SemiColon),
      Keyboard::Quote => Some(RdevKey::Quote),
      Keyboard::Comma => Some(RdevKey::Comma),
      Keyboard::Period => None,
      Keyboard::Slash => Some(RdevKey::Slash),
      Keyboard::MetaLeft => Some(RdevKey::MetaLeft),
      Keyboard::Delete => Some(RdevKey::Delete),
      Keyboard::ContextMenu => None,
      Keyboard::Num1 => Some(RdevKey::Kp1),
      Keyboard::Num2 => Some(RdevKey::Kp2),
      Keyboard::Num3 => Some(RdevKey::Kp3),
      Keyboard::Num4 => Some(RdevKey::Kp4),
      Keyboard::Num5 => Some(RdevKey::Kp5),
      Keyboard::Num6 => Some(RdevKey::Kp6),
      Keyboard::Num7 => Some(RdevKey::Kp7),
      Keyboard::Num8 => Some(RdevKey::Kp8),
      Keyboard::Num9 => Some(RdevKey::Kp9),
      Keyboard::Num0 => Some(RdevKey::Kp0),
      Keyboard::NumLock => Some(RdevKey::NumLock),
      Keyboard::NumAdd => None,
      Keyboard::NumSubtract => Some(RdevKey::KpMinus),
      Keyboard::NumDivide => Some(RdevKey::KpDivide),
      Keyboard::NumMultiply => Some(RdevKey::KpMultiply),
      Keyboard::NumDecimal => None,
      Keyboard::ArrowUp => Some(RdevKey::UpArrow),
      Keyboard::ArrowDown => Some(RdevKey::DownArrow),
      Keyboard::ArrowLeft => Some(RdevKey::LeftArrow),
      Keyboard::ArrowRight => Some(RdevKey::RightArrow),
      Keyboard::Home => Some(RdevKey::Home),
      Keyboard::End => Some(RdevKey::End),
      Keyboard::Insert => Some(RdevKey::Insert),
      Keyboard::PageUp => Some(RdevKey::PageUp),
      Keyboard::PageDown => Some(RdevKey::PageDown),
      Keyboard::Pause => Some(RdevKey::Pause),
      Keyboard::ScrollLock => Some(RdevKey::ScrollLock),
    }
  }

  pub fn to_enigo_key(&self) -> Option<EnigoKey> {
    match self {
      Keyboard::A => Some(EnigoKey::A),
      Keyboard::B => Some(EnigoKey::B),
      Keyboard::C => Some(EnigoKey::C),
      Keyboard::D => Some(EnigoKey::D),
      Keyboard::E => Some(EnigoKey::E),
      Keyboard::F => Some(EnigoKey::F),
      Keyboard::G => Some(EnigoKey::G),
      Keyboard::H => Some(EnigoKey::H),
      Keyboard::I => Some(EnigoKey::I),
      Keyboard::J => Some(EnigoKey::J),
      Keyboard::K => Some(EnigoKey::K),
      Keyboard::L => Some(EnigoKey::L),
      Keyboard::M => Some(EnigoKey::M),
      Keyboard::N => Some(EnigoKey::N),
      Keyboard::O => Some(EnigoKey::O),
      Keyboard::P => Some(EnigoKey::P),
      Keyboard::Q => Some(EnigoKey::Q),
      Keyboard::R => Some(EnigoKey::R),
      Keyboard::S => Some(EnigoKey::S),
      Keyboard::T => Some(EnigoKey::T),
      Keyboard::U => Some(EnigoKey::U),
      Keyboard::V => Some(EnigoKey::V),
      Keyboard::W => Some(EnigoKey::W),
      Keyboard::X => Some(EnigoKey::X),
      Keyboard::Y => Some(EnigoKey::Y),
      Keyboard::Z => Some(EnigoKey::Z),
      Keyboard::Backspace => Some(EnigoKey::Backspace),
      Keyboard::CapsLock => Some(EnigoKey::CapsLock),
      Keyboard::Enter => Some(EnigoKey::Return),
      Keyboard::Esc => Some(EnigoKey::Escape),
      Keyboard::AltLeft => Some(EnigoKey::Alt),
      Keyboard::AltRight => Some(EnigoKey::Alt),
      Keyboard::CtrlLeft => Some(EnigoKey::Control),
      Keyboard::CtrlRight => Some(EnigoKey::Control),
      Keyboard::ShiftLeft => Some(EnigoKey::Shift),
      Keyboard::ShiftRight => Some(EnigoKey::Shift),
      Keyboard::Space => Some(EnigoKey::Space),
      Keyboard::Tab => Some(EnigoKey::Tab),
      Keyboard::F1 => Some(EnigoKey::F1),
      Keyboard::F2 => Some(EnigoKey::F2),
      Keyboard::F3 => Some(EnigoKey::F3),
      Keyboard::F4 => Some(EnigoKey::F4),
      Keyboard::F5 => Some(EnigoKey::F5),
      Keyboard::F6 => Some(EnigoKey::F6),
      Keyboard::F7 => Some(EnigoKey::F7),
      Keyboard::F8 => Some(EnigoKey::F8),
      Keyboard::F9 => Some(EnigoKey::F9),
      Keyboard::F10 => Some(EnigoKey::F10),
      Keyboard::F11 => Some(EnigoKey::F11),
      Keyboard::F12 => Some(EnigoKey::F12),
      Keyboard::Digit1 => todo!(),
      Keyboard::Digit2 => todo!(),
      Keyboard::Digit3 => todo!(),
      Keyboard::Digit4 => todo!(),
      Keyboard::Digit5 => todo!(),
      Keyboard::Digit6 => todo!(),
      Keyboard::Digit7 => todo!(),
      Keyboard::Digit8 => todo!(),
      Keyboard::Digit9 => todo!(),
      Keyboard::Digit0 => todo!(),
      Keyboard::Backquote => todo!(),
      Keyboard::Minus => todo!(),
      Keyboard::Equal => todo!(),
      Keyboard::BracketLeft => todo!(),
      Keyboard::BracketRight => todo!(),
      Keyboard::Backslash => todo!(),
      Keyboard::Semicolon => todo!(),
      Keyboard::Quote => todo!(),
      Keyboard::Comma => todo!(),
      Keyboard::Period => todo!(),
      Keyboard::Slash => todo!(),
      Keyboard::MetaLeft => todo!(),
      Keyboard::Delete => todo!(),
      Keyboard::ContextMenu => todo!(),
      Keyboard::Num1 => todo!(),
      Keyboard::Num2 => todo!(),
      Keyboard::Num3 => todo!(),
      Keyboard::Num4 => todo!(),
      Keyboard::Num5 => todo!(),
      Keyboard::Num6 => todo!(),
      Keyboard::Num7 => todo!(),
      Keyboard::Num8 => todo!(),
      Keyboard::Num9 => todo!(),
      Keyboard::Num0 => todo!(),
      Keyboard::NumLock => todo!(),
      Keyboard::NumAdd => todo!(),
      Keyboard::NumSubtract => todo!(),
      Keyboard::NumDivide => todo!(),
      Keyboard::NumMultiply => todo!(),
      Keyboard::NumDecimal => todo!(),
      Keyboard::ArrowUp => todo!(),
      Keyboard::ArrowDown => todo!(),
      Keyboard::ArrowLeft => todo!(),
      Keyboard::ArrowRight => todo!(),
      Keyboard::Home => todo!(),
      Keyboard::End => todo!(),
      Keyboard::Insert => todo!(),
      Keyboard::PageUp => todo!(),
      Keyboard::PageDown => todo!(),
      Keyboard::Pause => todo!(),
      Keyboard::ScrollLock => todo!(),
    }
  }
}

impl Into<u8> for Keyboard {
  fn into(self) -> u8 {
    self.to_ascii()
  }
}

impl Into<String> for Keyboard {
  fn into(self) -> String {
    self.to_string()
  }
}

impl TryInto<RdevKey> for Keyboard {
  type Error = Error;
  fn try_into(self) -> Result<RdevKey, Self::Error> {
    self.to_rdev_key().to_result(Error::NoKeycode)
  }
}

impl TryInto<EnigoKey> for Keyboard {
  type Error = Error;
  fn try_into(self) -> Result<EnigoKey, Self::Error> {
    self.to_enigo_key().to_result(Error::NoKeycode)
  }
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, Deserialize, Serialize, Display, EnumString)]
pub enum Mouse {
  Left,
  Right,
  Middle,
  Forward,
  Back
}

impl Mouse {
  fn to_rdev_button(&self) -> Option<RdevButton> {
    match self {
      Mouse::Left => Some(RdevButton::Left),
      Mouse::Right => Some(RdevButton::Right),
      Mouse::Middle => Some(RdevButton::Middle),
      Mouse::Back => None,
      Mouse::Forward => None
    }
  }
}

impl TryInto<RdevButton> for Mouse {
  type Error = Error;
  fn try_into(self) -> Result<RdevButton, Self::Error> {
    self.to_rdev_button().to_result(Error::NoKeycode)
  }
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, Deserialize, Serialize, Display)]
pub enum Key {
  Keyboard(Keyboard),
  Mouse(Mouse)
}

